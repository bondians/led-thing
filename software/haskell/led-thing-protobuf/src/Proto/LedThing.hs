{-# LANGUAGE BangPatterns, DeriveDataTypeable, DeriveGeneric, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module Proto.LedThing (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified GHC.Generics as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".LedThing\", haskellPrefix = [MName \"Proto\"], parentModule = [], baseName = MName \"LedThing\"}, protoFilePath = [\"Proto\",\"LedThing.hs\"], protoSource = \"led-thing.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.ChannelStructure\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelStructure\"}, descFilePath = [\"Proto\",\"LedThing\",\"ChannelStructure.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ChannelStructure.channel_number\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ChannelStructure\"], baseName' = FName \"channel_number\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ChannelStructure.format\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ChannelStructure\"], baseName' = FName \"format\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ChannelFormat\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelFormat\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ChannelStructure.driver\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ChannelStructure\"], baseName' = FName \"driver\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ChannelDriver\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelDriver\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ChannelStructure.channel_count\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ChannelStructure\"], baseName' = FName \"channel_count\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.HelloRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"HelloRequest\"}, descFilePath = [\"Proto\",\"LedThing\",\"HelloRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.HelloRequest.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"HelloRequest\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.HelloRequest.protocol_version\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"HelloRequest\"], baseName' = FName \"protocol_version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ProtocolVersion\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ProtocolVersion\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.HelloResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"HelloResponse\"}, descFilePath = [\"Proto\",\"LedThing\",\"HelloResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.HelloResponse.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"HelloResponse\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.HelloResponse.status\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"HelloResponse\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ResultStatus\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ResultStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.HelloResponse.status_message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"HelloResponse\"], baseName' = FName \"status_message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.ListChannelsRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ListChannelsRequest\"}, descFilePath = [\"Proto\",\"LedThing\",\"ListChannelsRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ListChannelsRequest.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ListChannelsRequest\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.ListChannelsResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ListChannelsResponse\"}, descFilePath = [\"Proto\",\"LedThing\",\"ListChannelsResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ListChannelsResponse.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ListChannelsResponse\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ListChannelsResponse.channels\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ListChannelsResponse\"], baseName' = FName \"channels\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ChannelStructure\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelStructure\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.CreateChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"CreateChannelRequest\"}, descFilePath = [\"Proto\",\"LedThing\",\"CreateChannelRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.CreateChannelRequest.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"CreateChannelRequest\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.CreateChannelRequest.channel\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"CreateChannelRequest\"], baseName' = FName \"channel\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ChannelStructure\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelStructure\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.CreateChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"CreateChannelResponse\"}, descFilePath = [\"Proto\",\"LedThing\",\"CreateChannelResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.CreateChannelResponse.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"CreateChannelResponse\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.CreateChannelResponse.status\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"CreateChannelResponse\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ResultStatus\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ResultStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.CreateChannelResponse.status_message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"CreateChannelResponse\"], baseName' = FName \"status_message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.DeleteChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"DeleteChannelRequest\"}, descFilePath = [\"Proto\",\"LedThing\",\"DeleteChannelRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.DeleteChannelRequest.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"DeleteChannelRequest\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.DeleteChannelRequest.channelNumber\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"DeleteChannelRequest\"], baseName' = FName \"channelNumber\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.DeleteChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"DeleteChannelResponse\"}, descFilePath = [\"Proto\",\"LedThing\",\"DeleteChannelResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.DeleteChannelResponse.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"DeleteChannelResponse\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.DeleteChannelResponse.status\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"DeleteChannelResponse\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ResultStatus\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ResultStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.DeleteChannelResponse.status_message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"DeleteChannelResponse\"], baseName' = FName \"status_message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.ReadChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ReadChannelRequest\"}, descFilePath = [\"Proto\",\"LedThing\",\"ReadChannelRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelRequest.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelRequest\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelRequest.channel\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelRequest\"], baseName' = FName \"channel\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelRequest.offset\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelRequest\"], baseName' = FName \"offset\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelRequest.count\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelRequest\"], baseName' = FName \"count\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.ReadChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ReadChannelResponse\"}, descFilePath = [\"Proto\",\"LedThing\",\"ReadChannelResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelResponse.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelResponse\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelResponse.status\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelResponse\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ResultStatus\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ResultStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelResponse.status_message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelResponse\"], baseName' = FName \"status_message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.ReadChannelResponse.data\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"ReadChannelResponse\"], baseName' = FName \"data'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.WriteChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WriteChannelRequest\"}, descFilePath = [\"Proto\",\"LedThing\",\"WriteChannelRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelRequest.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelRequest\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelRequest.channel\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelRequest\"], baseName' = FName \"channel\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelRequest.offset\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelRequest\"], baseName' = FName \"offset\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelRequest.data\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelRequest\"], baseName' = FName \"data'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.WriteChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WriteChannelResponse\"}, descFilePath = [\"Proto\",\"LedThing\",\"WriteChannelResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelResponse.request_id\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelResponse\"], baseName' = FName \"request_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelResponse.status\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelResponse\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ResultStatus\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ResultStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WriteChannelResponse.status_message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WriteChannelResponse\"], baseName' = FName \"status_message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LedThing.WireMessage\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WireMessage\"}, descFilePath = [\"Proto\",\"LedThing\",\"WireMessage.hs\"], isGroup = False, fields = fromList [], descOneofs = fromList [OneofInfo {oneofName = ProtoName {protobufName = FIName \".LedThing.WireMessage.message\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\"], baseName = MName \"Message\"}, oneofFName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\"], baseName' = FName \"message\", baseNamePrefix' = \"\"}, oneofFilePath = [\"Proto\",\"LedThing\",\"WireMessage\",\"Message.hs\"], oneofFields = fromList [(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.hello_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Hello_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.hello_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"hello_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 100}, wireTag = WireTag {getWireTag = 802}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.HelloRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"HelloRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.hello_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Hello_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.hello_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"hello_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 101}, wireTag = WireTag {getWireTag = 810}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.HelloResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"HelloResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.list_channels_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"List_channels_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.list_channels_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"list_channels_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 102}, wireTag = WireTag {getWireTag = 818}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ListChannelsRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ListChannelsRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.list_channels_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"List_channels_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.list_channels_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"list_channels_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 103}, wireTag = WireTag {getWireTag = 826}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ListChannelsResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ListChannelsResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.create_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Create_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.create_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"create_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 104}, wireTag = WireTag {getWireTag = 834}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.CreateChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"CreateChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.create_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Create_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.create_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"create_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 105}, wireTag = WireTag {getWireTag = 842}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.CreateChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"CreateChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.delete_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Delete_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.delete_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"delete_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 106}, wireTag = WireTag {getWireTag = 850}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.DeleteChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"DeleteChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.delete_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Delete_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.delete_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"delete_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 107}, wireTag = WireTag {getWireTag = 858}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.DeleteChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"DeleteChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.read_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Read_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.read_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"read_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ReadChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ReadChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.read_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Read_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.read_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"read_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ReadChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ReadChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.write_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Write_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.write_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"write_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.WriteChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WriteChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.write_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Write_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.write_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"write_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.WriteChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WriteChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing})], oneofMakeLenses = False}], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".LedThing.ProtocolVersion\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ProtocolVersion\"}, enumFilePath = [\"Proto\",\"LedThing\",\"ProtocolVersion.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"V0\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LedThing.ResultStatus\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ResultStatus\"}, enumFilePath = [\"Proto\",\"LedThing\",\"ResultStatus.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"OK\"),(EnumCode {getEnumCode = 1},\"ERROR\"),(EnumCode {getEnumCode = 2},\"MESSAGE_BUFFER_OVERRUN\"),(EnumCode {getEnumCode = 3},\"INVALID_REQUEST\"),(EnumCode {getEnumCode = 4},\"UNSUPPORTED_OPERATION\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LedThing.ChannelFormat\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelFormat\"}, enumFilePath = [\"Proto\",\"LedThing\",\"ChannelFormat.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"SCALAR\"),(EnumCode {getEnumCode = 1},\"RGB\"),(EnumCode {getEnumCode = 2},\"RGBW\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LedThing.ChannelDriver\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ChannelDriver\"}, enumFilePath = [\"Proto\",\"LedThing\",\"ChannelDriver.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NONE\"),(EnumCode {getEnumCode = 1},\"APA102\"),(EnumCode {getEnumCode = 2},\"LPD8806\"),(EnumCode {getEnumCode = 3},\"SK6812\"),(EnumCode {getEnumCode = 4},\"WS2801\"),(EnumCode {getEnumCode = 5},\"WS2811\"),(EnumCode {getEnumCode = 6},\"WS2812\")]}], oneofs = [OneofInfo {oneofName = ProtoName {protobufName = FIName \".LedThing.WireMessage.message\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\"], baseName = MName \"Message\"}, oneofFName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\"], baseName' = FName \"message\", baseNamePrefix' = \"\"}, oneofFilePath = [\"Proto\",\"LedThing\",\"WireMessage\",\"Message.hs\"], oneofFields = fromList [(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.hello_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Hello_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.hello_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"hello_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 100}, wireTag = WireTag {getWireTag = 802}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.HelloRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"HelloRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.hello_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Hello_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.hello_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"hello_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 101}, wireTag = WireTag {getWireTag = 810}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.HelloResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"HelloResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.list_channels_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"List_channels_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.list_channels_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"list_channels_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 102}, wireTag = WireTag {getWireTag = 818}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ListChannelsRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ListChannelsRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.list_channels_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"List_channels_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.list_channels_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"list_channels_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 103}, wireTag = WireTag {getWireTag = 826}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ListChannelsResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ListChannelsResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.create_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Create_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.create_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"create_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 104}, wireTag = WireTag {getWireTag = 834}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.CreateChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"CreateChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.create_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Create_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.create_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"create_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 105}, wireTag = WireTag {getWireTag = 842}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.CreateChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"CreateChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.delete_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Delete_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.delete_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"delete_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 106}, wireTag = WireTag {getWireTag = 850}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.DeleteChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"DeleteChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.delete_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Delete_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.delete_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"delete_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 107}, wireTag = WireTag {getWireTag = 858}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.DeleteChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"DeleteChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.read_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Read_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.read_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"read_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ReadChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ReadChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.read_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Read_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.read_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"read_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.ReadChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"ReadChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.write_channel_request\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Write_channel_request\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.write_channel_request\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"write_channel_request\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.WriteChannelRequest\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WriteChannelRequest\"}), hsRawDefault = Nothing, hsDefault = Nothing}),(ProtoName {protobufName = FIName \".LedThing.WireMessage.message.write_channel_response\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName = MName \"Write_channel_response\"},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LedThing.WireMessage.message.write_channel_response\", haskellPrefix' = [MName \"Proto\"], parentModule' = [MName \"LedThing\",MName \"WireMessage\",MName \"Message\"], baseName' = FName \"write_channel_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LedThing.WriteChannelResponse\", haskellPrefix = [MName \"Proto\"], parentModule = [MName \"LedThing\"], baseName = MName \"WriteChannelResponse\"}), hsRawDefault = Nothing, hsDefault = Nothing})], oneofMakeLenses = False}], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\163\SYN\n\SIled-thing.proto\"\147\SOH\n\DLEChannelStructure\DC2\SYN\n\SOchannel_number\CAN\SOH \SOH(\r\DC2'\n\ACKformat\CAN\STX \SOH(\SO2\ETB.LedThing.ChannelFormat\DC2'\n\ACKdriver\CAN\ETX \SOH(\SO2\ETB.LedThing.ChannelDriver\DC2\NAK\n\rchannel_count\CAN\EOT \SOH(\r\"W\n\fHelloRequest\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC23\n\DLEprotocol_version\CAN\STX \SOH(\SO2\EM.LedThing.ProtocolVersion\"c\n\rHelloResponse\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2&\n\ACKstatus\CAN\STX \SOH(\SO2\SYN.LedThing.ResultStatus\DC2\SYN\n\SOstatus_message\CAN\ETX \SOH(\t\")\n\DC3ListChannelsRequest\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\"X\n\DC4ListChannelsResponse\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2,\n\bchannels\CAN\STX \ETX(\v2\SUB.LedThing.ChannelStructure\"W\n\DC4CreateChannelRequest\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2+\n\achannel\CAN\STX \SOH(\v2\SUB.LedThing.ChannelStructure\"k\n\NAKCreateChannelResponse\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2&\n\ACKstatus\CAN\STX \SOH(\SO2\SYN.LedThing.ResultStatus\DC2\SYN\n\SOstatus_message\CAN\ETX \SOH(\t\"A\n\DC4DeleteChannelRequest\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2\NAK\n\rchannelNumber\CAN\STX \SOH(\r\"k\n\NAKDeleteChannelResponse\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2&\n\ACKstatus\CAN\STX \SOH(\SO2\SYN.LedThing.ResultStatus\DC2\SYN\n\SOstatus_message\CAN\ETX \SOH(\t\"X\n\DC2ReadChannelRequest\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2\SI\n\achannel\CAN\STX \SOH(\r\DC2\SO\n\ACKoffset\CAN\ETX \SOH(\r\DC2\r\n\ENQcount\CAN\EOT \SOH(\r\"w\n\DC3ReadChannelResponse\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2&\n\ACKstatus\CAN\STX \SOH(\SO2\SYN.LedThing.ResultStatus\DC2\SYN\n\SOstatus_message\CAN\ETX \SOH(\t\DC2\f\n\EOTdata\CAN\EOT \SOH(\f\"X\n\DC3WriteChannelRequest\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2\SI\n\achannel\CAN\STX \SOH(\r\DC2\SO\n\ACKoffset\CAN\ETX \SOH(\r\DC2\f\n\EOTdata\CAN\EOT \SOH(\f\"j\n\DC4WriteChannelResponse\DC2\DC2\n\nrequest_id\CAN\SOH \SOH(\r\DC2&\n\ACKstatus\CAN\STX \SOH(\SO2\SYN.LedThing.ResultStatus\DC2\SYN\n\SOstatus_message\CAN\ETX \SOH(\t\"\138\ACK\n\vWireMessage\DC2/\n\rhello_request\CANd \SOH(\v2\SYN.LedThing.HelloRequestH\NUL\DC21\n\SOhello_response\CANe \SOH(\v2\ETB.LedThing.HelloResponseH\NUL\DC2>\n\NAKlist_channels_request\CANf \SOH(\v2\GS.LedThing.ListChannelsRequestH\NUL\DC2@\n\SYNlist_channels_response\CANg \SOH(\v2\RS.LedThing.ListChannelsResponseH\NUL\DC2@\n\SYNcreate_channel_request\CANh \SOH(\v2\RS.LedThing.CreateChannelRequestH\NUL\DC2B\n\ETBcreate_channel_response\CANi \SOH(\v2\US.LedThing.CreateChannelResponseH\NUL\DC2@\n\SYNdelete_channel_request\CANj \SOH(\v2\RS.LedThing.DeleteChannelRequestH\NUL\DC2B\n\ETBdelete_channel_response\CANk \SOH(\v2\US.LedThing.DeleteChannelResponseH\NUL\DC2<\n\DC4read_channel_request\CAN\SOH \SOH(\v2\FS.LedThing.ReadChannelRequestH\NUL\DC2>\n\NAKread_channel_response\CAN\STX \SOH(\v2\GS.LedThing.ReadChannelResponseH\NUL\DC2>\n\NAKwrite_channel_request\CAN\ETX \SOH(\v2\GS.LedThing.WriteChannelRequestH\NUL\DC2@\n\SYNwrite_channel_response\CAN\EOT \SOH(\v2\RS.LedThing.WriteChannelResponseH\NULB\t\n\amessage*\EM\n\SIProtocolVersion\DC2\ACK\n\STXV0\DLE\NUL*m\n\fResultStatus\DC2\ACK\n\STXOK\DLE\NUL\DC2\t\n\ENQERROR\DLE\SOH\DC2\SUB\n\SYNMESSAGE_BUFFER_OVERRUN\DLE\STX\DC2\DC3\n\SIINVALID_REQUEST\DLE\ETX\DC2\EM\n\NAKUNSUPPORTED_OPERATION\DLE\EOT*.\n\rChannelFormat\DC2\n\n\ACKSCALAR\DLE\NUL\DC2\a\n\ETXRGB\DLE\SOH\DC2\b\n\EOTRGBW\DLE\STX*b\n\rChannelDriver\DC2\b\n\EOTNONE\DLE\NUL\DC2\n\n\ACKAPA102\DLE\SOH\DC2\v\n\aLPD8806\DLE\STX\DC2\n\n\ACKSK6812\DLE\ETX\DC2\n\n\ACKWS2801\DLE\EOT\DC2\n\n\ACKWS2811\DLE\ENQ\DC2\n\n\ACKWS2812\DLE\ACK2\244\ETX\n\DC2BufferedLedService\DC2<\n\ENQHello\DC2\SYN.LedThing.HelloRequest\SUB\ETB.LedThing.HelloResponse(\NUL0\NUL\DC2Q\n\fListChannels\DC2\GS.LedThing.ListChannelsRequest\SUB\RS.LedThing.ListChannelsResponse(\NUL0\NUL\DC2T\n\rCreateChannel\DC2\RS.LedThing.CreateChannelRequest\SUB\US.LedThing.CreateChannelResponse(\NUL0\NUL\DC2T\n\rDeleteChannel\DC2\RS.LedThing.DeleteChannelRequest\SUB\US.LedThing.DeleteChannelResponse(\NUL0\NUL\DC2N\n\vReadChannel\DC2\FS.LedThing.ReadChannelRequest\SUB\GS.LedThing.ReadChannelResponse(\NUL0\NUL\DC2Q\n\fWriteChannel\DC2\GS.LedThing.WriteChannelRequest\SUB\RS.LedThing.WriteChannelResponse(\NUL0\NULb\ACKproto2")